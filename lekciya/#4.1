//обработка одномерного массива с помощью функций
#include <iomanip>
#include <iostream>

using namespace std;

int a[10];
int main() {
	setlocale(LC_ALL, "ru");
	srand((unsigned)time(NULL));
	int N, i, sum;
	void myprint(int n);//отмечаем 
	int mysum(int n);//переменные в мейне, 
	int mysumpol(int n);//чтобы в последствии 
	int mysumotr(int n);//их использовать ниже
	int mymax(int, int *);
	int mymin(int n, int*);
	//int mymin(int n);
	cout << "Введите количество до 10" << endl;
	cin >> N;
	for (i = 0; i < N; i++)
		a[i] = rand() % 10-5;
	cout << "Исходный массив" << endl;
	void myprint(int);
	myprint(N);
	int mysum(int);
	sum = mysum(N);
	cout << "Сумма всех элементов = " << sum << endl;

	int sumpol = mysumpol(N);
	cout << "Сумма положительных элементов = " << sumpol << endl;

	int inmax = -1;
	int max = mymax(N, &inmax);

	int sumotr = mysumotr(N);
	cout << "Сумма отрительных элементов = " << sumotr << endl;

	cout << endl << "Максимальный элемент массива = " << max << endl;
	cout << endl << "Индекс максимального элемента массива = " << inmax << endl;

	int inmin = -1;
	int min = mymin(N, &inmin);

	cout << endl << "Минимальный элемент массива = " << min << endl;
	cout << endl << "Индекс минимального элемента массива = " << inmin << endl;
	/*int min = mymin(N);
	cout << endl << "Минимальный элемент массива" << max << endl;*/
	system("pause");
}

void myprint(int n) {
	for (int i = 0; i < n; i++)
		cout << setw(3) << a[i];
	cout << endl;
}

int mysum(int n) {
	int s = 0;
	for (int i = 0; i < n; i++)
		s += a[i];
	return s;
}

int mysumpol(int n) {
	int s = 0;
	for (int i = 0; i < n; i++)
		if (a[i] > 0)
			s += a[i];
	return s;

}

int mysumotr(int n) {
	int s = 0;
	for (int i = 0; i < n; i++)
		if (a[i] < 0)
			s += a[i];
	return s;
}

int mymax(int n, int* index) {
		int m = a[0];
		int im = 0;
		for (int i = 0; i < n; i++)
			if (a[i] > m) {
				m = a[i];
				im = i;
			}
		*index = im;
	return m;
}

int mymin(int n, int* index) {
	int mi = a[0];
	int imi = 0;
	for (int i = 0; i < n; i++)
		if (a[i] < mi) {
			mi = a[i];
			imi = i;
		}
	*index = imi;
	return mi;
}
